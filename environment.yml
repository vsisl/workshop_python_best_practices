# This is a comment. Use "#" to add a comment.
#
# conda virtual environment definition file
#
# ENVIRONMENT SETUP:
#   1) execute the following command in terminal to create the environment
#       $ conda env create -f environment.yml
name: IL_workshop
channels:           # see more about channels: https://conda.io/projects/conda/en/latest/user-guide/tasks/manage-channels.html
  - conda-forge
dependencies:
  - python=3.10.11
  - pandas=2.0.2              # working with tabular data (Excel-like jobs)
  - xlrd=2.0.1                # for loading xlsx into pandas DataFrames
  - openpyxl=3.1.2            # for saving pandas DataFrames to xlsx
  - vaex=4.16.0               # out-of-memory DataFrames
  - numpy=1.24.3              # working with numerical arrays (MATLAB-like jobs)
  - scipy=1.10.1              # for mathematics, science, and engineering
  # - pyne                    # nuclear engineering toolkit; NOTE: not available for Windows!
  - matplotlib=3.7.1          # MATLAB-like plots
  - plotly=5.14.1             # interactive plots
  - pytest=7.3.1              # unit tests
  - spyder=5.4.3              # development environment (simple IDE good for scripting and data analysis)
  - jupyter=1.0.0             # jupyter notebooks
  - nbformat=5.9.0            # for plotly plots to work properly in jupyter notebooks
  - jupyterlab=4.0.1          # full-featured IDE, evolution of jupyter notebooks
  - jupyterlab-git=0.41.0     # git plugin (GUI) for JupyterLab
  - scrapy=2.9.0              # web scraping
  - requests=2.31.0           # for making HTTP requests (e.g. for web scraping)
  - beautifulsoup4=4.12.2     # for parting HTML (e.g. when extracting certain information from a website)
  - tqdm=4.65.0               # progress bars
  - mako=1.2.4                # templating
  - sqlalchemy=2.0.15         # working with SQL databases
  - line_profiler=4.0.3       # code profiling
  - pip=23.1.2                # default package manager for python
# Note: You can use pip to install packages that are not available through conda (I haven't encountered any such packages so far.)
#  - pip:
#    - package_to_be_installed_using_pip==version